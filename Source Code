import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score
import TrainingDataset
import emoji


def getResult(url):
    data = pd.read_csv("detect_phishing_website.csv")
    data.drop(["id"], axis=1, inplace=True)
    data = data.dropna()
    y = data.Result
    x = data.drop('Result', axis=1)
    x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)
    dt = DecisionTreeClassifier(random_state=0)
    dt.fit(x_train, y_train)
    y_predict = dt.predict(x_test)
    score = dt.score(x_test, y_test)
    print('The accuracy level is : ',100 * score)
    X_new = []

    X_input = url
    X_new = features_extraction.generate_data_set(X_input)

    X_new = np.array(X_new).reshape(1, -1)
    try:
        prediction = dt.predict(X_new)
        print("The Given URL ",url," is :",end=" ")
        if prediction ==-1:
            print(emoji.emojize('Phishing Url :skull_and_crossbones:'))
        else:
            print(emoji.emojize('Legitimate Url :slightly_smiling_face:'))
    except:
            print("The Given URL ",url," is :",end=" ")
            print(emoji.emojize('Phishing Url :skull_and_crossbones:'))
    
url=input('Enter The URL : ')
Domain=['.com','.net','.in']
for i in Domain:
    if i in url:
        getResult(url)
        break
else:
    print(emoji.emojize('Your URL is in valid....... \nEnter Valid URL :pleading_face:'))
